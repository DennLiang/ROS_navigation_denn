global_costmap:
  #机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
  robot_radius: 0.12 
  # footprint: [[-0.12, -0.12], [-0.12, 0.12], [0.12, 0.12], [0.12, -0.12]] #其他形状

  obstacle_range: 3.0 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
  raytrace_range: 3.5 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物

  #地图类型
  map_type: costmap
  #导航包所需要的传感器
  observation_sources: scan
  scan: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

  global_frame: map #地图坐标系
  robot_base_frame: base_footprint #机器人坐标系
  # 以此实现坐标变换

  #膨胀半径，扩展在碰撞区域以外的代价区域，使得机器人规划路径避开障碍物
  inflation_radius: 0.2
  #代价比例系数，越大则代价值越小
  cost_scaling_factor: 10.0

  update_frequency: 1.0 #代价地图更新频率
  publish_frequency: 1.0 #代价地图的发布频率
  transform_tolerance: 0.5 #等待坐标变换发布信息的超时时间

  static_map: true # 是否使用一个地图或者地图服务器来初始化全局代价地图，如果不使用静态地图，这个参数为false.
  resolution: 0.05