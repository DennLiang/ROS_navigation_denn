local_costmap:
  #机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
  robot_radius: 0.12 
  # footprint: [[-0.12, -0.12], [-0.12, 0.12], [0.12, 0.12], [0.12, -0.12]] #其他形状

  obstacle_range: 3.0 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
  raytrace_range: 3.5 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物

  #地图类型
  map_type: costmap
  #导航包所需要的传感器
  observation_sources: scan
  scan: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

  global_frame: map #odom 
  robot_base_frame: base_footprint #机器人坐标系

  update_frequency: 3.0 #代价地图更新频率
  publish_frequency: 3.0 #代价地图的发布频率
  transform_tolerance: 0.5 #等待坐标变换发布信息的超时时间

  #膨胀半径，扩展在碰撞区域以外的代价区域，使得机器人规划路径避开障碍物
  inflation_radius: 0.15
  #代价比例系数，越大则代价值越小
  cost_scaling_factor: 3.0

  static_map: false  #不需要静态地图，可以提升导航效果
  rolling_window: true #是否使用动态窗口，默认为false，在静态的全局地图中，地图不会变化
  width: 3 # 局部地图宽度 单位是 m
  height: 3 # 局部地图高度 单位是 m
  resolution: 0.05 # 局部地图分辨率 单位是 m，一般与静态地图分辨率保持一致
